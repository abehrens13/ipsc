<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
				xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
>
				<modelVersion>4.0.0</modelVersion>
				<parent>
								<groupId>org.springframework.boot</groupId>
								<artifactId>spring-boot-starter-parent</artifactId>
								<version>2.2.5.RELEASE</version>
				</parent>
				<groupId>de.openaqua</groupId>
				<artifactId>ipsc</artifactId>
				<version>0.0.2-SNAPSHOT</version>
				<packaging>war</packaging>
				<properties>
								<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
								<spring.devtools.add-properties>true</spring.devtools.add-properties>
								<java.version>1.8</java.version>
				</properties>
				<dependencies>
								<!-- spring stuff -->
								<dependency>
												<groupId>org.springframework.boot</groupId>
												<artifactId>spring-boot-starter-data-mongodb-reactive</artifactId>
								</dependency>
								<dependency>
												<groupId>org.springframework.boot</groupId>
												<artifactId>spring-boot-starter-data-rest</artifactId>
								</dependency>
								<dependency>
												<groupId>org.springframework.boot</groupId>
												<artifactId>spring-boot-starter-web</artifactId>
								</dependency>
								<dependency>
												<groupId>org.springframework.boot</groupId>
												<artifactId>spring-boot-devtools</artifactId>
												<scope>runtime</scope>
												<optional>true</optional>
								</dependency>
								<!-- <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-tomcat</artifactId> 
												<scope>provided</scope> </dependency> -->
								<dependency>
												<groupId>org.springframework.boot</groupId>
												<artifactId>spring-boot-starter-test</artifactId>
												<scope>test</scope>
												<exclusions>
																<exclusion>
																				<groupId>org.junit.vintage</groupId>
																				<artifactId>junit-vintage-engine</artifactId>
																</exclusion>
												</exclusions>
								</dependency>
								<dependency>
												<groupId>de.flapdoodle.embed</groupId>
												<artifactId>de.flapdoodle.embed.mongo</artifactId>
												<scope>test</scope>
								</dependency>
								<dependency>
												<groupId>io.projectreactor</groupId>
												<artifactId>reactor-test</artifactId>
												<scope>test</scope>
								</dependency>
								<dependency>
												<groupId>org.springframework.restdocs</groupId>
												<artifactId>spring-restdocs-mockmvc</artifactId>
												<scope>test</scope>
								</dependency>
								<!-- other stuff -->
								<dependency>
												<groupId>org.jgrapht</groupId>
												<artifactId>jgrapht-core</artifactId>
												<version>1.4.0</version>
								</dependency>
								<!-- Unit Test -->
								<dependency>
												<groupId>junit</groupId>
												<artifactId>junit</artifactId>
												<scope>test</scope>
								</dependency>
				</dependencies>
				<build>
								<plugins>
												<plugin>
																<groupId>org.asciidoctor</groupId>
																<artifactId>asciidoctor-maven-plugin</artifactId>
																<version>1.5.8</version>
																<executions>
																				<execution>
																								<id>generate-docs</id>
																								<phase>prepare-package</phase>
																								<goals>
																												<goal>process-asciidoc</goal>
																								</goals>
																								<configuration>
																												<backend>html</backend>
																												<doctype>book</doctype>
																								</configuration>
																				</execution>
																</executions>
																<dependencies>
																				<dependency>
																								<groupId>org.springframework.restdocs</groupId>
																								<artifactId>spring-restdocs-asciidoctor</artifactId>
																								<version>${spring-restdocs.version}</version>
																				</dependency>
																</dependencies>
												</plugin>
												<plugin>
																<groupId>org.springframework.boot</groupId>
																<artifactId>spring-boot-maven-plugin</artifactId>
												</plugin>
												<!-- Docker integration -->
												<!-- https://github.com/fabric8io/docker-maven-plugin/blob/master/doc/intro.md -->
												<!-- for now: -->
												<!-- docker build -t feb18/backend:latest . -->
												<!-- docker run -name backend -p 8080:8080 feb18/backend -->
												<!-- <plugin> <groupId>io.fabric8</groupId> <artifactId>docker-maven-plugin</artifactId> 
																<version>0.33.0</version> <configuration> <images> <image> <alias>backend</alias> 
																<name>openaqua/ipscBackend:${project.version}</name> <build> <from>java:8</from> 
																<assembly> <descriptor>docker-assembly.xml</descriptor> </assembly> <cmd> 
																<shell>java -jar ipsc-0.0.2-SNAPSHOT.war</shell> </cmd> </build> <run> <ports> 
																<port>tomcat.port:8080</port> </ports> <wait> <http> <url>http://localhost:${tomcat.port}/access</url> 
																</http> <time>10000</time> </wait> <links> <link>database:db</link> </links> 
																</run> </image> </images> </configuration> </plugin> -->
								</plugins>
				</build>
</project>